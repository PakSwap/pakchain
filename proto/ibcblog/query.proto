syntax = "proto3";
package ahmetson.chain.ibcblog;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "ibcblog/timedoutPosts.proto";
import "ibcblog/sentPost.proto";
import "ibcblog/post.proto";

option go_package = "github.com/ahmetson/chain/x/ibcblog/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a timedoutPosts by id.
	rpc TimedoutPosts(QueryGetTimedoutPostsRequest) returns (QueryGetTimedoutPostsResponse) {
		option (google.api.http).get = "/ahmetson/chain/ibcblog/timedoutPosts/{id}";
	}

	// Queries a list of timedoutPosts items.
	rpc TimedoutPostsAll(QueryAllTimedoutPostsRequest) returns (QueryAllTimedoutPostsResponse) {
		option (google.api.http).get = "/ahmetson/chain/ibcblog/timedoutPosts";
	}


	// Queries a sentPost by id.
	rpc SentPost(QueryGetSentPostRequest) returns (QueryGetSentPostResponse) {
		option (google.api.http).get = "/ahmetson/chain/ibcblog/sentPost/{id}";
	}

	// Queries a list of sentPost items.
	rpc SentPostAll(QueryAllSentPostRequest) returns (QueryAllSentPostResponse) {
		option (google.api.http).get = "/ahmetson/chain/ibcblog/sentPost";
	}


	// Queries a post by id.
	rpc Post(QueryGetPostRequest) returns (QueryGetPostResponse) {
		option (google.api.http).get = "/ahmetson/chain/ibcblog/post/{id}";
	}

	// Queries a list of post items.
	rpc PostAll(QueryAllPostRequest) returns (QueryAllPostResponse) {
		option (google.api.http).get = "/ahmetson/chain/ibcblog/post";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetTimedoutPostsRequest {
	uint64 id = 1;
}

message QueryGetTimedoutPostsResponse {
	TimedoutPosts TimedoutPosts = 1;
}

message QueryAllTimedoutPostsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTimedoutPostsResponse {
	repeated TimedoutPosts TimedoutPosts = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetSentPostRequest {
	uint64 id = 1;
}

message QueryGetSentPostResponse {
	SentPost SentPost = 1;
}

message QueryAllSentPostRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSentPostResponse {
	repeated SentPost SentPost = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetPostRequest {
	uint64 id = 1;
}

message QueryGetPostResponse {
	Post Post = 1;
}

message QueryAllPostRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPostResponse {
	repeated Post Post = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
